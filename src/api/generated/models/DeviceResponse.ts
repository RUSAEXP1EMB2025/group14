/**
 * Nature API
 * Read/Write Nature Remo
 *
 * OpenAPI spec version: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DeviceResponseNewestEventsValue } from '../models/DeviceResponseNewestEventsValue';
import { DeviceResponseUsersInner } from '../models/DeviceResponseUsersInner';
import { HttpFile } from '../http/http';

export class DeviceResponse {
  btMacAddress?: string;
  createdAt?: Date;
  firmwareVersion?: string;
  humidityOffset?: number;
  id?: string;
  macAddress?: string;
  name?: string;
  /**
   * The SensorValue key means \'te\' = temperature, \'hu\' = humidity, \'il\' = illumination, \'mo\' = movement. The val of \'mo\' is always 1 and when movement event is captured created_at is updated.
   */
  newestEvents?: { [key: string]: DeviceResponseNewestEventsValue };
  online?: boolean;
  serialNumber?: string;
  temperatureOffset?: number;
  updatedAt?: Date;
  /**
   * Deprecated. Do not use in new code.
   */
  users?: Array<DeviceResponseUsersInner>;

  static readonly discriminator: string | undefined = undefined;

  static readonly mapping: { [index: string]: string } | undefined = undefined;

  static readonly attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
    format: string;
  }> = [
    {
      name: 'btMacAddress',
      baseName: 'bt_mac_address',
      type: 'string',
      format: ''
    },
    {
      name: 'createdAt',
      baseName: 'created_at',
      type: 'Date',
      format: 'date-time'
    },
    {
      name: 'firmwareVersion',
      baseName: 'firmware_version',
      type: 'string',
      format: ''
    },
    {
      name: 'humidityOffset',
      baseName: 'humidity_offset',
      type: 'number',
      format: 'float'
    },
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
      format: ''
    },
    {
      name: 'macAddress',
      baseName: 'mac_address',
      type: 'string',
      format: ''
    },
    {
      name: 'name',
      baseName: 'name',
      type: 'string',
      format: ''
    },
    {
      name: 'newestEvents',
      baseName: 'newest_events',
      type: '{ [key: string]: DeviceResponseNewestEventsValue; }',
      format: ''
    },
    {
      name: 'online',
      baseName: 'online',
      type: 'boolean',
      format: ''
    },
    {
      name: 'serialNumber',
      baseName: 'serial_number',
      type: 'string',
      format: ''
    },
    {
      name: 'temperatureOffset',
      baseName: 'temperature_offset',
      type: 'number',
      format: 'float'
    },
    {
      name: 'updatedAt',
      baseName: 'updated_at',
      type: 'Date',
      format: 'date-time'
    },
    {
      name: 'users',
      baseName: 'users',
      type: 'Array<DeviceResponseUsersInner>',
      format: ''
    }
  ];

  static getAttributeTypeMap() {
    return DeviceResponse.attributeTypeMap;
  }

  public constructor() {}
}
